% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sort_matrix_elements.R
\name{sort_matrix_elements}
\alias{sort_colMax}
\alias{sort_colSums}
\alias{sort_descOnDiag}
\alias{sort_matrix_elements}
\alias{sort_rowMax}
\alias{sort_rowSums}
\title{Sort rows and columns of a matrix according to a criterion}
\usage{
sort_descOnDiag(M, importance = which.min(dim(M)), na.rm = TRUE)

sort_colSums(M, decreasing = TRUE, na.rm = TRUE)

sort_rowSums(M, decreasing = TRUE, na.rm = TRUE)

sort_rowMax(M, decreasing = TRUE, na.rm = TRUE)

sort_colMax(M, decreasing = TRUE, na.rm = TRUE)
}
\arguments{
\item{M}{A matrix.}

\item{importance}{Numecic value (either 1 for rows or 2 for columns) which is used
to resolve ties when 2 equally important matches are found (i.e., when
absolute values are equal). If \code{importance = 1}, the element's
importance is calculated by row-wise proportions, if \code{importance = 2}
- by column-wise proportions.
 Element with higher proportional value is selected as having higher
 priority.}

\item{na.rm}{Logical. Should missing values (including NaN) be omitted from
the calculations?}

\item{decreasing}{Logical. Should the sort be decreasing?}
}
\description{
\code{sort_descOnDiag()}  where possible, sort rows and columns of a matrix
to put the highest values on diagonal in a descending order. The highest
value is paced at the top left corner.

\code{sort_colSums()} sorts columns of a matrix according to the values of column sums.\cr
\code{sort_colMax()} sorts columns of a matrix according to the maximum value in each column.\cr

\code{sort_rowSums()} sorts rows of a matrix according to the values of row sums.\cr
\code{sort_rowMax()} sorts rows of a matrix according to the maximum value in each row.\cr

Possible application: in a cluster analysis sort rows and columns of a cross
tablation by the best match (illustration in section "Expamples"). \cr
}
\examples{
library(spMisc)

# Create matrix
M0 <- matrix(c(0, 11,8, 0,
               12,0, 0, 0,
               0, 0, 0, 9,
               0, 0, 9, 0,
               0, 0, 1, 0),byrow=TRUE,nc=4)

# Give names for rows and columns
M0 <- pkgmaker::addnames(M0)

# Sort and print
M0
sort_descOnDiag(M0)
sort_colSums(M0)
sort_rowSums(M0)
sort_colMax(M0)
sort_rowMax(M0)

# Application in cluster analysis ==========================================
set.seed(1)
Clusters <- kmeans(iris[,-5], 3)$cluster
Species <- iris$Species

# Regular cross tabulation
TABLE <- table(Species, Clusters)
TABLE

##                Clusters
##  Species       1  2  3
##  setosa       50  0  0
##  versicolor    0  2 48
##  virginica     0 36 14

# Arranged by the best match
TABLE_best_match <- sort_descOnDiag(TABLE)
TABLE_best_match

##              Clusters
##  Species       1  3  2
##  setosa       50  0  0
##  versicolor    0 48  2
##  virginica     0 14 36

#------------------------------------------------------------------
# Parameter `importance` for proportional importance:

 #>
Matrix <- matrix(c(3,0,0,2,3,0,0,0,5),3,3)
Matrix <- pkgmaker::addnames(Matrix)
 #>          col1 col2 col3
 #>   row1    3    2    0
 #>   row2    0    3    0
 #>   row3    0    0    5

# Row-wise importance
Matrix_by_row <- sort_descOnDiag(Matrix, importance = 1)
Matrix_by_row
 #>          col3 col2 col1
 #>   row3    5    0    0
 #>   row2    0    3    0
 #>   row1    0    2    3  <---- 2 is in row 3

# Column-wise importance
Matrix_by_col <- sort_descOnDiag(Matrix, importance = 2)
Matrix_by_col
 #>          col3 col1 col2
 #>   row3    5    0    0
 #>   row1    0    3    2  <---- 2 is in row 2
 #>   row2    0    0    3


}
\author{
Vilmantas Gegzna
}
\seealso{
\code{\link[base]{order}}, \code{\link[base]{sort}}.

Other matrix operations in \pkg{spMisc}: \code{\link{corr_vec2mat}},
  \code{\link{indMatrix}}, \code{\link{nTri2nDiag}},
  \code{\link{revalueMatrix}}, \code{\link{which.in}},
  \code{\link{which.max.all}},
  \code{\link{which.max.perRow}}
}

